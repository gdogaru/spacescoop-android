/*
 * Copyright (c) 2019 Gabriel Dogaru - gdogaru@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url "https://jitpack.io" }
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://clojars.org/repo/' }
    handler.maven { url 'https://maven.fabric.io/public' }
}

ext.addRepos = this.&addRepos


/**
 * @return version name from APP_VERSION_NAME or git tag or package.json
 */
static def androidAppVersionName() {
    def branch = branchName()
    //return system variable if available
    String version = System.env.APP_VERSION_NAME
    //get version with fallback
    String appVersion = "3.0"
    if (version) {
        if (version.startsWith("v")) version = version.substring(1)
        appVersion = version
    } else {
        //return commit tag if available
        String tag = "git tag -l --points-at HEAD".execute().text
        if (tag ==~ /v\d+\.\d+\.\d+/) {
            appVersion = tag.substring(1)
        } else {
            appVersion = "3.0"
        }
    }
    def buildNo = System.env.CIRCLE_BUILD_NUM ? ".${System.env.CIRCLE_BUILD_NUM}" : ""
    appVersion = appVersion + buildNo

    if ("master" == branch || "HEAD" == branch || branch.startsWith("hotfix")) return appVersion

    if (branch.toLowerCase().startsWith("feature/")) {
        branch = branch.replace("feature/", "F/")
    }

    return appVersion + "-" + escapeBranchName(branch)
}

private static String branchName() {
    def ps = "git rev-parse --abbrev-ref HEAD".execute()
    ps.waitForOrKill(2000)
    if (ps.exitValue() != 0) return ""
    return ps.text.trim()
}

private static String escapeBranchName(String branch) {
    return branch.replaceAll("\\s", "").replaceAll("[^/^\\p{IsAlphabetic}^\\p{IsDigit}]", "-")
}

ext.androidAppVersionCode = Integer.valueOf(System.env.CIRCLE_BUILD_NUM ?: 0) + 100
ext.androidAppVersionName = androidAppVersionName()

