/*
 * Copyright (c) 2019 Gabriel Dogaru - gdogaru@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
def build_versions = [:]
build_versions.min_sdk = 23
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.1"
ext.build_versions = build_versions

def versions = [:]
versions.kotlin = '1.2.71'
versions.jetifier = "1.0.0-beta04"
versions.gmsVersion = '17.0.0'
versions.arch_core = "1.1.1"
versions.room = "2.2.0-alpha02"
versions.navigation = "2.1.0-rc01"
versions.lifecycle = "1.1.1"
versions.support = "28.0.0"
versions.multidex = "1.0.3"
versions.dagger = "2.17"
versions.junit = "4.12"
versions.espresso = "3.0.2"
versions.okHttp3 = '3.8.1'
versions.retrofit = "2.4.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"
versions.constraint_layout = "1.0.2"
versions.glide = '4.4.0'
versions.timber = "4.5.1"
versions.androidState = '1.4.1'
versions.android_gradle_plugin = "3.1.3"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.0.2"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.paging = "1.0.0-beta1"
versions.crashlytics = '2.10.1'
versions.work = "2.0.0"
versions.lombok = "1.18.8"
versions.javaxannotationapi = "1.3.2"
ext.versions = versions

//in case I want deps
//ext.deps = [:]
//def deps = [:]
//def support = [:]
//support.annotations = "com.android.support:support-annotations:$versions.support"
//deps.support = support


static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url "https://jitpack.io" }
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'https://clojars.org/repo/' }
    handler.maven { url 'https://maven.fabric.io/public' }
}

ext.addRepos = this.&addRepos


/**
 * @return version name from APP_VERSION_NAME or git tag or package.json
 */
static def androidAppVersionName() {
    def branch = branchName()
    //return system variable if available
    String version = System.env.APP_VERSION_NAME
    //get version with fallback
    String appVersion = "3.0"
    if (version) {
        if (version.startsWith("v")) version = version.substring(1)
        appVersion = version
    } else {
        //return commit tag if available
        String tag = "git tag -l --points-at HEAD".execute().text
        if (tag ==~ /v\d+\.\d+\.\d+/) {
            appVersion = tag.substring(1)
        } else {
            appVersion = "3.0"
        }
    }
    def buildNo = System.env.CIRCLE_BUILD_NUM ? ".${System.env.CIRCLE_BUILD_NUM}" : ""
    appVersion = appVersion + buildNo

    if ("master" == branch || "HEAD" == branch || branch.startsWith("hotfix")) return appVersion

    if (branch.toLowerCase().startsWith("feature/")) {
        branch = branch.replace("feature/", "F/")
    }

    return appVersion + "-" + escapeBranchName(branch)
}

private static String branchName() {
    def ps = "git rev-parse --abbrev-ref HEAD".execute()
    ps.waitForOrKill(2000)
    if (ps.exitValue() != 0) return ""
    return ps.text.trim()
}

private static String escapeBranchName(String branch) {
    return branch.replaceAll("\\s", "").replaceAll("[^/^\\p{IsAlphabetic}^\\p{IsDigit}]", "-")
}

ext.androidAppVersionCode = Integer.valueOf(System.env.CIRCLE_BUILD_NUM ?: 0) + 100
ext.androidAppVersionName = androidAppVersionName()

