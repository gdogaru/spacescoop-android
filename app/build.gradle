plugins {
    id 'com.android.application'
    id 'io.fabric'
    id 'com.google.firebase.firebase-perf'
    id 'androidx.navigation.safeargs'
    id 'com.github.triplet.play' version "2.3.0"
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.gdogaru.spacescoop"
        versionCode 1
        versionName "0.0.0"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        multiDexEnabled = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(System.getenv('KEYSTORE') ?: '../certificate/build-keystore.jks')
            storePassword System.getenv("KEYSTORE_PASSWORD") ?: "spacescoop"
            keyAlias System.getenv("KEY_ALIAS") ?: "spacescoop"
            keyPassword System.getenv("KEY_PASSWORD") ?: "spacescoop"
        }
    }

    buildTypes {
        debug {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.release
        }
        release {
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../tools/proguard-shrink-only.pro'
        }
    }

    flavorDimensions "stage"

    productFlavors {
        dev {
            dimension "stage"
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            minSdkVersion 25
        }
        prod {
            dimension "stage"
            // The actual minSdkVersion for the application.
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            minSdkVersion build_versions.min_sdk
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/readme'
        exclude 'META-INF/jdom-info.xml'
    }

    lintOptions {
        abortOnError true
        lintConfig file("../tools/lint.xml")
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.sourceCompatibility
    }

    dexOptions {
        javaMaxHeapSize "2048M"
    }

    lintOptions {
        abortOnError true
        checkReleaseBuilds false
    }

    dexOptions {
//        javaMaxHeapSize "2g"
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.each { output ->
                output.versionCodeOverride = androidAppVersionCode
                output.versionNameOverride = androidAppVersionName
            }
        }
    }
}

dependencies {
    compileOnly "org.projectlombok:lombok:$versions.lombok"
    annotationProcessor "org.projectlombok:lombok:$versions.lombok"
    compileOnly "javax.annotation:javax.annotation-api:$versions.javaxannotationapi"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.3.41'

    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.navigation:navigation-fragment:$versions.navigation"
    implementation "androidx.navigation:navigation-ui:$versions.navigation"
    implementation "androidx.room:room-runtime:$versions.room"
    annotationProcessor "androidx.room:room-compiler:$versions.room"
    androidTestImplementation "androidx.room:room-testing:$versions.room"
    implementation "androidx.paging:paging-runtime:2.1.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"

    implementation "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"
    implementation "com.google.android.gms:play-services-base:$versions.gmsVersion"
    implementation "com.google.android.gms:play-services-gcm:$versions.gmsVersion"
    implementation "com.google.firebase:firebase-core:17.0.1"
    implementation "com.google.firebase:firebase-perf:18.0.1"

    implementation "com.jakewharton.timber:timber:4.7.1"
    annotationProcessor "com.google.dagger:dagger-compiler:2.23.2"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.23.2"
    implementation "com.google.dagger:dagger:2.23.2"
    implementation "com.google.dagger:dagger-android:2.23.2"
    implementation "com.google.dagger:dagger-android-support:2.23.2"
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.4.0'
    annotationProcessor 'com.squareup.inject:assisted-inject-processor-dagger2:0.4.0'
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'

    implementation "androidx.work:work-runtime:2.1.0"
    testImplementation "androidx.work:work-testing:2.1.0"


    implementation 'com.github.faruktoptas:RetrofitRssConverterFactory:0.1.0'
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    implementation 'com.rometools:rome:1.12.1'

    implementation "com.evernote:android-state:${versions.androidState}"
    annotationProcessor "com.evernote:android-state-processor:${versions.androidState}"

    implementation 'net.opacapp:multiline-collapsingtoolbar:27.1.1'

    testImplementation "androidx.test.ext:junit:1.1.1"
    testImplementation "org.mockito:mockito-core:2.25.0"
    testImplementation "junit:junit:4.12"
    testImplementation "androidx.navigation:navigation-common:2.0.0"
    testImplementation "com.google.truth:truth:0.44"

    androidTestImplementation "com.google.truth:truth:0.44"
    androidTestImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.ext:truth:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestUtil "androidx.test:orchestrator:1.2.0"
}


/*
 * Copyright (c) 2019 Gabriel Dogaru - gdogaru@gmail.com
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

// Configuration for com.github.triplet.play deployment
play {
    track = 'alpha' // or internal or beta...
    serviceAccountCredentials = file(System.getenv('PRIVATE_KEY') ?: '../certificate/private-key.json')
    defaultToAppBundles = true // Use App Bundle instead of APK
    resolutionStrategy = "ignore"
    //If the deployment fails due to an API error, don't fail the CI Build
}


apply plugin: 'com.google.gms.google-services'